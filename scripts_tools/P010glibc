#!/bin/bash

. functions_pub

PackageName=glibc-2.10.1
PackageURL=http://ftp.gnu.org/gnu/glibc/glibc-2.10.1.tar.bz2

fullname=`basename $PackageURL`


case "${1}" in
download)
	check_and_download $PackageURL
	;;
build)
	#step0: unpack.
        unpack_and_enter $PackageName $PackageURL

	#fix a potential issue if /etc/ld.so.preload is used on host system.
	sed -i 's@/etc/ld.so.preload@/tools/etc/ld.so.preload@' elf/rtld.c

	mkdir -p $LFS_TEMP/build
	cd $LFS_TEMP/build
	err_check "[Error] glibc: create build directory failed."

	../$PackageName/configure --prefix=/tools \
		--disable-profile --enable-add-ons \
		--enable-kernel=2.6.0 --with-binutils=/tools/bin \
		--without-gd --with-headers=/tools/include \
		--without-selinux
	err_check "[Error] configure failed."

	#step4: make.
	make
	err_check "[Error] make failed."	

	#step5: install.
	mkdir -v /tools/etc
	touch /tools/etc/ld.so.conf
	make install
	err_check "[Error] install glibc failed."

	#adjust tool chain.
	mv -v /tools/bin/{ld,ld-old}
	err_check "[Error] Glibc: adjust tool chain failed."
	mv -v /tools/$(gcc -dumpmachine)/bin/{ld,ld-old}
	err_check "[Error] Glibc: adjust tool chain failed."
	mv -v /tools/bin/{ld-new,ld}
	err_check "[Error] Glibc: adjust tool chain failed."
	ln -sv /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld
	err_check "[Error] Glibc: adjust tool chain failed."
	
	#adjust gcc.
	gcc -dumpspecs | sed 's@/lib/ld-linux.so.2@/tools&@g' \
		> `dirname $(gcc -print-libgcc-file-name)`/specs

	GCC_FIXED=`dirname $(gcc -print-libgcc-file-name)`/include-fixed &&
	find ${GCC_FIXED}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
	rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_FIXED}/*` &&
	unset GCC_FIXED

	#check.
	echo 'main(){}' > dummy.c
	cc dummy.c
	err_check "[Error] compile dummy.c failed."
	readelf -l a.out | grep ': /tools'
	err_check "[Error] gcc: not link to /tools."
	

	#leave.
        package_leave $PackageName $PackageURL
	;;

*)
	exit 1
	;;
esac

#end 

