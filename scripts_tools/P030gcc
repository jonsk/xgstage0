#!/bin/bash

. functions_pub

PackageName=gcc-4.4.3
PackageURL=http://ftp.gnu.org/gnu/gcc/$PackageName/$PackageName.tar.bz2

GMP_PACKNAME=gmp-4.3.2
GMP_URL=ftp://ftp.gnu.org/gnu/gmp/$GMP_PACKNAME.tar.bz2

MPFR_PACKNAME=mpfr-2.4.2
MPFR_URL=http://www.mpfr.org/$MPFR_PACKNAME/$MPFR_PACKNAME.tar.bz2

case "${1}" in
download)
	check_and_download $PackageURL
	check_and_download $GMP_URL
	check_and_download $MPFR_URL
	;;
build)
	#step0: unpack.
        unpack_and_enter $PackageName $PackageURL -pass2
	
	#unpack GMP.
	tar xf $LFS_SOURCE/`basename $GMP_URL`
	mv {$GMP_PACKNAME,gmp}
	err_check "[Error] unpack gmp failed."
	
	#unpack MPFR
	tar xf $LFS_SOURCE/`basename $MPFR_URL`
	mv {$MPFR_PACKNAME,mpfr}
	err_check "[Error] unpack mpfr failed."

	cp -v gcc/Makefile.in{,.orig}
	sed 's@\./fixinc\.sh@-c true@' gcc/Makefile.in.orig > gcc/Makefile.in
	cp -v gcc/Makefile.in{,.tmp}
	sed 's/^XCFLAGS =$/& -fomit-frame-pointer/' gcc/Makefile.in.tmp \
		> gcc/Makefile.in
	for file in $(find gcc/config -name linux64.h -o -name linux.h)
	do
		cp -uv $file{,.orig}
		sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
			-e 's@/usr@/tools@g' $file.orig > $file
		echo "
		#undef STANDARD_INCLUDE_DIR
		#define STANDARD_INCLUDE_DIR 0" >> $file
		touch $file.orig
	done


        #step3: configure.
        mkdir -p $LFS_TEMP/build
        cd $LFS_TEMP/build
        err_check "enter directory $LFS_TEMP/build failed"

        ../$PackageName/configure --prefix=/tools \
		--with-local-prefix=/tools --enable-clocale=gnu \
		--enable-shared --enable-threads=posix \
		--enable-__cxa_atexit --enable-languages=c,c++ \
		--disable-libstdcxx-pch --disable-bootstrap
        err_check "[Error] configure failed."

        #step4: make.
        make
        err_check "[Error] make failed."

        #step5: install
        make install
        err_check "[Error] install failed."

	#check.
	echo 'main(){}' > dummy.c
	cc dummy.c
	err_check "[Error] gcc-pass2: compile failed."

	readelf -l a.out | grep ': /tools'
	err_check "[Error] gcc-pass2: not link to /tools."

	#leave.
        package_leave $PackageName $PackageURL -pass2
	;;

*)
	exit 1
	;;
esac

#end 

